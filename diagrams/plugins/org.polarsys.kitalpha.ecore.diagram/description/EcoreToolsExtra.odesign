<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:filter="http://www.eclipse.org/sirius/diagram/description/filter/1.1.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" name="EcoreToolsExtra" version="8.1.0">
  <ownedViewpoints name="EcoreToolsExtra_ModelView" label="Ecore Tools Extra - Model View" modelFileExtension="ecore xcore">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@toolSections.4/@ownedTools[name='Drop%20EClass%20from%20treeview'] //@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@toolSections.4/@ownedTools[name='Drop%20EEnum%20from%20treeview']" name="Focus" titleExpression="['Focus on EPackage ' + name/]" domainClass="ecore.EPackage">
      <filters xsi:type="filter:CompositeFilterDescription" name="Hide class content">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EClass']/@subNodeMappings[name='Focus%20All%20EAttribute'] //@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EClass']/@subNodeMappings[name='Focus%20All%20EOperation']"/>
      </filters>
      <filters xsi:type="filter:CompositeFilterDescription" name="Hide generalizations">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@edgeMappings[name='Focus%20ESupertypes']"/>
      </filters>
      <filters xsi:type="filter:CompositeFilterDescription" name="Hide references">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@edgeMappings[name='Focus%20EReference']" semanticConditionExpression="[containment/]"/>
      </filters>
      <filters xsi:type="filter:CompositeFilterDescription" name="Hide containments">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@edgeMappings[name='Focus%20EReference']" semanticConditionExpression="[not containment/]"/>
      </filters>
      <filters xsi:type="filter:CompositeFilterDescription" name="Hide deriveds">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@edgeMappings[name='Focus%20EReference']" semanticConditionExpression="[not derived/]"/>
      </filters>
      <defaultLayer name="Default">
        <edgeMappings name="Focus EReference" semanticCandidatesExpression="[focusedEReferences(diagram.eContents()->select(oclIsKindOf(DNodeList)).eGet('target'))/]" semanticElements="" sourceMapping="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EClass']" targetMapping="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EClass']" targetFinderExpression="[eType.oclAsType(ecore::EClass).mostAbstractObject(diagram.eContents()->select(oclIsKindOf(DNodeList)).eGet('target'))/]" sourceFinderExpression="[mostAbstractObject(diagram.eContents()->select(oclIsKindOf(DNodeList)).eGet('target'))/]" targetExpression="" domainClass="EReference" useDomainElement="true">
          <style sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelExpression="[computeEReferenceLabel(view.eContainer(DDiagram).eContents()->select(oclIsKindOf(DNodeList)).eGet('target'))/]">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="[containment/]">
            <style sourceArrow="FillDiamond" targetArrow="NoDecoration" sizeComputationExpression="1">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelExpression="[computeEReferenceLabel(view.eContainer(DDiagram).eContents()->select(oclIsKindOf(DNodeList)).eGet('target'))/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="[derived/]">
            <style strokeColor="//@userColorsPalettes[name='Migration%20Palette']/@entries[name='DerivedEReferencesColor']" sizeComputationExpression="1">
              <centerLabelStyleDescription labelFormat="italic" labelExpression="['/' + computeEReferenceLabel(view.eContainer(DDiagram).eContents()->select(oclIsKindOf(DNodeList)).eGet('target'))/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="Focus ESupertypes" semanticCandidatesExpression="[viewpoint.eAllContents()->select(oclIsKindOf(DNodeList)).eGet('target')->select(oclIsKindOf(EClass))/]" semanticElements="" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EClass']" targetMapping="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EClass']" targetFinderExpression="[nearestSuperTypes(diagram.eContents()->select(oclIsKindOf(DNodeList)).eGet('target'))/]" sourceFinderExpression="[mostAbstractObject(diagram.eContents()->select(oclIsKindOf(DNodeList)).eGet('target'))/]" targetExpression="" domainClass="EClass" useDomainElement="true">
          <style targetArrow="InputClosedArrow" sizeComputationExpression="1" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="[superTypesLabel(view.eGet('targetNode').eGet('target').oclAsType(ecore::EClass))->select(oclIsKindOf(EClass)).eGet('name')/]">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="service:isImplemented(view)">
            <style targetArrow="InputClosedArrow" sizeComputationExpression="2" routingStyle="manhattan">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="[superTypesLabel(view.eGet('targetNode').eGet('target').oclAsType(ecore::EClass))->select(oclIsKindOf(EClass)).eGet('name')/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <containerMappings name="Focus EClass" deletionDescription="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@toolSections.0/@ownedTools[name='delete%20EClass%20and%20EEnum']" semanticCandidatesExpression="service:focusOnEClassSCE()" createElements="false" domainClass="ecore.EClass" childrenPresentation="List">
          <subNodeMappings name="Focus All EAttribute" preconditionExpression="[eContainer(EClass).hasNotDisplayedSuperType(containerView.eGet('target'), viewpoint.eAllContents()->select(oclIsKindOf(viewpoint::DSemanticDecorator)).eGet('target'))/]" semanticCandidatesExpression="service:findAllEAtribute()" semanticElements="" domainClass="ecore.EAttribute">
            <style xsi:type="style:SquareDescription" labelExpression="[name +' : '+ eType.name +' ['+ eContainer(EPackage).name +']' /]" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="Focus All EOperation" preconditionExpression="[eContainer(EClass).hasNotDisplayedSuperType(containerView.eGet('target'), viewpoint.eAllContents()->select(oclIsKindOf(viewpoint::DSemanticDecorator)).eGet('target'))/]" semanticCandidatesExpression="service:findAllEOperation()" semanticElements="" domainClass="ecore.EOperation">
            <style xsi:type="style:SquareDescription" labelExpression="[name +' : '+ eType.name +' ['+ eContainer(EPackage).name +']' /]" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" labelExpression="[name  + '\n( '+ eContainer(EPackage).name + ')' /]" roundedCorner="true" widthComputationExpression="10" heightComputationExpression="10" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
          <conditionnalStyles predicateExpression="feature:abstract">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" labelExpression="[name  + '\n( '+ eContainer(EPackage).name + ')' /]" roundedCorner="true" widthComputationExpression="10" heightComputationExpression="10" backgroundStyle="GradientTopToBottom">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <containerMappings name="Focus EEnum" deletionDescription="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@toolSections.0/@ownedTools[name='delete%20EClass%20and%20EEnum']" semanticCandidatesExpression="service:focusOnEENumSCE()" createElements="false" domainClass="ecore.EEnum" childrenPresentation="List">
          <subNodeMappings name="Focus EEnumLiteral" semanticCandidatesExpression="feature:eLiterals" domainClass="ecore.EEnumLiteral">
            <style xsi:type="style:BundledImageDescription" labelAlignment="LEFT" sizeComputationExpression="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" roundedCorner="true" widthComputationExpression="10" heightComputationExpression="10" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Insert Existing" label="Insert Existing">
          <ownedTools xsi:type="tool:SelectionWizardDescription" name="Insert Eclass" label="EClasses" precondition="[containerView->select(oclIsKindOf(DDiagram))->size() > 0 /]" candidatesExpression="service:insertEClassSelectionWizard(containerView)" multiple="true" iconPath="/org.eclipse.emf.ecore.edit/icons/full/obj16/EClass.gif">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:containerView">
                <subModelOperations xsi:type="tool:If" conditionExpression="service:updateSessionSemantiqueResources(element, container)">
                  <subModelOperations xsi:type="tool:For" expression="var:element">
                    <subModelOperations xsi:type="tool_1:CreateView" mapping="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EClass']" containerViewExpression="var:containerView"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:SelectionWizardDescription" name="Insert enum" label="EEnums" precondition="[containerView->select(oclIsKindOf(DDiagram))->size() > 0 /]" forceRefresh="true" candidatesExpression="[self.insertEEnumSelectionWizard(containerView)/]" multiple="true" iconPath="/org.eclipse.emf.ecore.edit/icons/full/obj16/EEnum.gif">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:containerView">
                <subModelOperations xsi:type="tool:If" conditionExpression="service:updateSessionSemantiqueResources(element, container)">
                  <subModelOperations xsi:type="tool:For" expression="[element/]">
                    <subModelOperations xsi:type="tool_1:CreateView" mapping="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EEnum']" containerViewExpression="[containerView/]"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="delete EClass and EEnum" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[elementView/]">
                <subModelOperations xsi:type="tool:DeleteView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Show EClass">
          <ownedTools xsi:type="tool:ToolDescription" name="Neighbors" precondition="[container.toolShowPrecondition()/]" iconPath="/org.polarsys.kitalpha.ecore.diagram/icons/tools/neighbors.gif">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:For" expression="[element.showNeighbor(elementView)/]">
                <subModelOperations xsi:type="tool_1:CreateView" mapping="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EClass']" containerViewExpression="[elementView.oclAsType(diagram::DNodeList).getParentDiagram()/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolDescription" name="All relationships" precondition="[container.toolShowPrecondition()/]" iconPath="/org.polarsys.kitalpha.ecore.diagram/icons/tools/allRelationships.gif">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:For" expression="[element.showRelation(elementView)/]">
                <subModelOperations xsi:type="tool_1:CreateView" mapping="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EClass']" containerViewExpression="[elementView.oclAsType(diagram::DNodeList).getParentDiagram()/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:SelectionWizardDescription" name="References" precondition="[container.toolShowPrecondition()/]" candidatesExpression="[(container.showReferences(diagram.eAllContents()->asOrderedSet()->asSequence().eGet('target')))->asOrderedSet()->asSequence()/]" multiple="true" tree="true" rootExpression="[(container.showReferencesRoot(diagram.eAllContents().eGet('target')))->asOrderedSet()->asSequence()/]" childrenExpression="[eContents(ecore::EReference)/]" message="Select linked classes" iconPath="/org.polarsys.kitalpha.ecore.diagram/icons/tools/References2.gif">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:For" expression="var:element">
                <subModelOperations xsi:type="tool:If" conditionExpression="[i.eGet('eType') &lt;> container/]">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[i.eGet('eType')/]">
                    <subModelOperations xsi:type="tool:If" conditionExpression="[i.eGet('eType').oclAsType(ecore::EClass).mostAbstractObject(diagram.eContents(diagram::DNodeList).eGet('target'))->size() = 0/]">
                      <subModelOperations xsi:type="tool_1:CreateView" mapping="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EClass']" containerViewExpression="[containerView.eContainer(diagram::DSemanticDiagram)/]"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="[i.eGet('eType') = container/]">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[i.eContainer()/]">
                    <subModelOperations xsi:type="tool:If" conditionExpression="[i.eContainer().oclAsType(ecore::EClass).mostAbstractObject(diagram.eContents(diagram::DNodeList).eGet('target'))->size() = 0/]">
                      <subModelOperations xsi:type="tool_1:CreateView" mapping="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EClass']" containerViewExpression="[containerView.eContainer(DSemanticDiagram)/]"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Hide">
          <ownedTools xsi:type="tool:SelectionWizardDescription" name="EClasses references" precondition="service:toolsShowHidePrecondition(containerView)" candidatesExpression="[hideClassReferencesCandidates(containerView)->asOrderedSet()->asSequence()/]" multiple="true" tree="true" rootExpression="[hideClassReferencesRoot(containerView)->asOrderedSet()->asSequence()/]" childrenExpression="[eContents()->select(oclIsKindOf(ecore::EReference))/]" message="Select class references to hide" iconPath="/org.polarsys.kitalpha.ecore.diagram/icons/tools/hide_EReference.gif">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Hide DEdges" id="org.polarsys.kitalpha.ecore.diagram.javaaction.HideLinkAction">
                <parameters name="element" value="var:element"/>
                <parameters name="viewElement" value="[containerView.getViewElement()/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolDescription" name="All inheritances" precondition="[container.oclIsKindOf(ecore::EPackage)/]" iconPath="/org.polarsys.kitalpha.ecore.diagram/icons/tools/hide_AllInheritances.gif">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Show Link Action" id="org.polarsys.kitalpha.ecore.diagram.javaaction.HideInheritanceAction">
                <parameters name="element" value="[element.computeAllReferencesToHide(elementView)/]"/>
                <parameters name="viewElement" value="var:elementView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolDescription" name="All References" precondition="[container.oclIsKindOf(ecore::EPackage)/]" iconPath="/org.polarsys.kitalpha.ecore.diagram/icons/tools/hide_AllReferences.gif">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Show Link Action" id="org.polarsys.kitalpha.ecore.diagram.javaaction.HideReferenceAction">
                <parameters name="element" value="[element.computeAllReferencesToHide(elementView)/]"/>
                <parameters name="viewElement" value="var:elementView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Reveal">
          <ownedTools xsi:type="tool:SelectionWizardDescription" name="EClasses references" precondition="service:toolsShowHidePrecondition(containerView)" candidatesExpression="[revealClassReferencesCandidates(containerView)->asOrderedSet()->asSequence()/]" multiple="true" tree="true" rootExpression="[revealClassReferencesRoot(containerView)->asOrderedSet()->asSequence()/]" childrenExpression="[eContents()->select(oclIsKindOf(ecore::EReference))/]" message="Select class references to hide" iconPath="/org.eclipse.emf.ecore.edit/icons/full/obj16/EReference.gif">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Show Link Action" id="org.polarsys.kitalpha.ecore.diagram.javaaction.ShowLinkAction">
                <parameters name="element" value="var:element"/>
                <parameters name="viewElement" value="[containerView.getViewElement()/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolDescription" name="All inheritances" precondition="[container.oclIsKindOf(ecore::EPackage)/]" iconPath="/org.polarsys.kitalpha.ecore.diagram/icons/tools/allInheritances.gif">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Show Link Action" id="org.polarsys.kitalpha.ecore.diagram.javaaction.ShowInheritanceAction">
                <parameters name="element" value="[element.computeAllReferencesToShow(elementView)/]"/>
                <parameters name="viewElement" value="var:elementView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolDescription" name="All References" precondition="[container.oclIsKindOf(ecore::EPackage)/]" iconPath="/org.polarsys.kitalpha.ecore.diagram/icons/tools/allReferences.gif">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Show Link Action" id="org.polarsys.kitalpha.ecore.diagram.javaaction.ShowReferenceAction">
                <parameters name="element" value="[element.computeAllReferencesToShow(elementView)/]"/>
                <parameters name="viewElement" value="var:elementView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Drop tools section">
          <ownedTools xsi:type="tool_1:ContainerDropDescription" name="Drop EClass from treeview" mappings="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EClass']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:For" expression="var:element">
                <subModelOperations xsi:type="tool_1:CreateView" mapping="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EClass']" containerViewExpression="var:newContainerView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerDropDescription" name="Drop EEnum from treeview" mappings="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EEnum']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:For" expression="var:element">
                <subModelOperations xsi:type="tool_1:CreateView" mapping="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EClass']" containerViewExpression="var:newContainerView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="[eContainer() &lt;> container/]">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EClass']/@subNodeMappings[name='Focus%20All%20EAttribute']/@style" attributeName="iconPath" value="/org.polarsys.kitalpha.ecore.diagram/icons/styles/ESupperAttribute.png"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='EcoreToolsExtra_ModelView']/@ownedRepresentations[name='Focus']/@defaultLayer/@containerMappings[name='Focus%20EClass']/@subNodeMappings[name='Focus%20All%20EOperation']/@style" attributeName="iconPath" value="/org.polarsys.kitalpha.ecore.diagram/icons/styles/ESuperOperation.png"/>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="org.polarsys.kitalpha.ecore.diagram.service.HideRevealToolsService"/>
    <ownedJavaExtensions qualifiedClassName="org.polarsys.kitalpha.ecore.diagram.service.EcoreService"/>
    <ownedJavaExtensions qualifiedClassName="org.polarsys.kitalpha.ecore.diagram.service.EcoreActionsServices"/>
    <ownedJavaExtensions qualifiedClassName="org.polarsys.kitalpha.ecore.diagram.service.ShowService"/>
  </ownedViewpoints>
  <ownedViewpoints name="EcoreToolsExtra_ClassView" label="Ecore Tools Extra - Class View" modelFileExtension="ecore xcore">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Inheritance" titleExpression="[name +' - Inheritance'/]" domainClass="ecore.EClass">
      <metamodel href="http://www.eclipse.org/emf/2002/Ecore#/"/>
      <defaultLayer name="Default">
        <edgeMappings name="Inheritance SuperType Link" semanticCandidatesExpression="&lt;%current.eAllContents%>" sourceMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Inheritance']/@defaultLayer/@containerMappings[name='Inheritance%20Root%20EClass'] //@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Inheritance']/@defaultLayer/@containerMappings[name='Inheritance%20Neighbor%20EClass']" targetMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Inheritance']/@defaultLayer/@containerMappings[name='Inheritance%20Neighbor%20EClass'] //@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Inheritance']/@defaultLayer/@containerMappings[name='Inheritance%20Root%20EClass']" targetFinderExpression="feature:eSuperTypes">
          <style targetArrow="InputClosedArrow" sizeComputationExpression="1" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="Inheritance Root EClass" semanticCandidatesExpression="var:self" domainClass="ecore.EClass" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" labelExpression="[name  + '\n( '+ eContainer(EPackage).name + ')' /]" roundedCorner="true" widthComputationExpression="10" heightComputationExpression="10" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
          <conditionnalStyles predicateExpression="feature:abstract">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" labelExpression="[name  + '\n( '+ eContainer(EPackage).name + ')' /]" roundedCorner="true" widthComputationExpression="10" heightComputationExpression="10" backgroundStyle="GradientTopToBottom">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <containerMappings name="Inheritance Neighbor EClass" semanticCandidatesExpression="service:getNeighbourgClasses()" domainClass="ecore.EClass" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" labelExpression="[name  + '\n( '+ eContainer(EPackage).name + ')' /]" roundedCorner="true" widthComputationExpression="10" heightComputationExpression="10" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
          <conditionnalStyles predicateExpression="feature:abstract">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" labelExpression="[name  + '\n( '+ eContainer(EPackage).name + ')' /]" roundedCorner="true" widthComputationExpression="10" heightComputationExpression="10" backgroundStyle="GradientTopToBottom">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Containment" titleExpression="[name +' - Containment'/]" domainClass="ecore.EClass" rootExpression="">
      <metamodel href="http://www.eclipse.org/emf/2002/Ecore#/"/>
      <defaultLayer name="Default">
        <edgeMappings name="Containment Containment Link" preconditionExpression="[linksPrecondition(true, false)/]" semanticCandidatesExpression="[self.eGet('eAllReferences')/]" sourceMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Containment']/@defaultLayer/@containerMappings[name='Containment%20Root%20EClass']" targetMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Containment']/@defaultLayer/@containerMappings[name='Containment%20Neighbor%20EClass']" targetFinderExpression="feature:eType" sourceFinderExpression="[diagram.eGet('target')/]" domainClass="ecore.EReference" useDomainElement="true">
          <style sourceArrow="FillDiamond" targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelExpression="feature:name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="Containment Container Link" semanticCandidatesExpression="[diagram.eGet('target').eInverse(EReference)->select(containment)/]" sourceMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Containment']/@defaultLayer/@containerMappings[name='Containment%20Neighbor%20EClass']" targetMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Containment']/@defaultLayer/@containerMappings[name='Containment%20Root%20EClass']" targetFinderExpression="[diagram.eGet('target')/]" sourceFinderExpression="feature:eContainer" targetExpression="" domainClass="ecore.EReference" useDomainElement="true">
          <style sourceArrow="FillDiamond" targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelExpression="feature:name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="Containment Auto Link" preconditionExpression="[linksPrecondition(true, true)/]" semanticCandidatesExpression="[eGet('eAllReferences')/]" sourceMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Containment']/@defaultLayer/@containerMappings[name='Containment%20Root%20EClass']" targetMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Containment']/@defaultLayer/@containerMappings[name='Containment%20Root%20EClass']" targetFinderExpression="[diagram.eGet('target')/]" sourceFinderExpression="[diagram.eGet('target')/]" domainClass="ecore.EReference" useDomainElement="true">
          <style sourceArrow="FillDiamond" targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelExpression="feature:name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="Containment Root EClass" semanticCandidatesExpression="var:self" domainClass="ecore.EClass" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Inheritance']/@defaultLayer/@containerMappings[name='Inheritance%20Root%20EClass']"/>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="Containment Neighbor EClass" preconditionExpression="[self &lt;> diagram.eGet('target')/]" semanticCandidatesExpression="[self.getNeighbourgClassesSemanticCandidate(eInverse(EReference), true)/]" domainClass="ecore.EClass" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Inheritance']/@defaultLayer/@containerMappings[name='Inheritance%20Neighbor%20EClass']"/>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Reference" titleExpression="[name+' - Reference'/]" domainClass="ecore.EClass" rootExpression="">
      <defaultLayer name="Default">
        <edgeMappings name="Reference Outgoing Link" preconditionExpression="[linksPrecondition(false, false)/]" semanticCandidatesExpression="feature:eAllReferences" sourceMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Reference']/@defaultLayer/@containerMappings[name='Reference%20Root%20EClass']" targetMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Reference']/@defaultLayer/@containerMappings[name='Reference%20Neighbor%20EClass']" targetFinderExpression="feature:eType" sourceFinderExpression="[diagram.eGet('target')/]" domainClass="ecore.EReference" useDomainElement="true">
          <style sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelExpression="feature:name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="feature:derived">
            <style sizeComputationExpression="1">
              <strokeColor xsi:type="description:UserFixedColor" href="#//@userColorsPalettes[name='Migration%20Palette']/@entries[name='color1']"/>
              <centerLabelStyleDescription labelFormat="italic" labelExpression="['/ ' + name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="Reference Incoming Link" preconditionExpression="[linksPrecondition(false, false)/]" semanticCandidatesExpression="[diagram.eGet('target').eInverse(EReference)/]" sourceMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Reference']/@defaultLayer/@containerMappings[name='Reference%20Neighbor%20EClass']" targetMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Reference']/@defaultLayer/@containerMappings[name='Reference%20Root%20EClass']" targetFinderExpression="[diagram.eGet('target')/]" sourceFinderExpression="feature:eContainer" targetExpression="" domainClass="ecore.EReference" useDomainElement="true">
          <style sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelExpression="feature:name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="feature:derived">
            <style sizeComputationExpression="1">
              <strokeColor xsi:type="description:UserFixedColor" href="#//@userColorsPalettes[name='Migration%20Palette']/@entries[name='color1']"/>
              <centerLabelStyleDescription labelFormat="italic" labelExpression="['/ ' + name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="Reference Auto Link" preconditionExpression="[linksPrecondition(false, true)/]" semanticCandidatesExpression="feature:eAllReferences" sourceMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Reference']/@defaultLayer/@containerMappings[name='Reference%20Root%20EClass']" targetMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Reference']/@defaultLayer/@containerMappings[name='Reference%20Root%20EClass']" targetFinderExpression="[diagram.eGet('target')/]" sourceFinderExpression="[diagram.eGet('target')/]" domainClass="ecore.EReference" useDomainElement="true">
          <style sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelExpression="feature:name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="feature:derived">
            <style sizeComputationExpression="1">
              <strokeColor xsi:type="description:UserFixedColor" href="#//@userColorsPalettes[name='Migration%20Palette']/@entries[name='color1']"/>
              <centerLabelStyleDescription labelFormat="italic" labelExpression="['/ ' + name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="Reference Root EClass" semanticCandidatesExpression="var:self" domainClass="ecore.EClass" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Inheritance']/@defaultLayer/@containerMappings[name='Inheritance%20Root%20EClass']"/>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="Reference Neighbor EClass" preconditionExpression="[self &lt;> diagram.eGet('target')/]" semanticCandidatesExpression="[getNeighbourgClassesSemanticCandidate(eInverse(EReference), false)/]" domainClass="ecore.EClass" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Inheritance']/@defaultLayer/@containerMappings[name='Inheritance%20Neighbor%20EClass']"/>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Class Focus" titleExpression="[name +' - Class Focus'/]" domainClass="ecore.EClass" rootExpression="">
      <defaultLayer name="Default">
        <edgeMappings name="EF Direct SuperType Link" semanticCandidatesExpression="&lt;%current.eAllContents%>" semanticElements="[null/]" sourceMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Class%20Focus']/@defaultLayer/@containerMappings[name='EF%20Root%20EClass']" targetMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Class%20Focus']/@defaultLayer/@containerMappings[name='EF%20Neighbor%20EClass']" targetFinderExpression="feature:eSuperTypes">
          <style targetArrow="InputClosedArrow" sizeComputationExpression="1" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="&lt;%self.isImplemented($view)%>">
            <style targetArrow="InputClosedArrow" sizeComputationExpression="3" routingStyle="manhattan">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="EF Indirect SuperType Link" semanticCandidatesExpression="&lt;%current.eAllContents%>" semanticElements="[null/]" sourceMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Class%20Focus']/@defaultLayer/@containerMappings[name='EF%20Root%20EClass']" targetMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Class%20Focus']/@defaultLayer/@containerMappings[name='EF%20Import%20EClass']" targetFinderExpression="feature:eAllSuperTypes">
          <style targetArrow="InputClosedArrow" sizeComputationExpression="1" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="&lt;%self.isImplemented($view)%>">
            <style targetArrow="InputClosedArrow" sizeComputationExpression="3" routingStyle="manhattan">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="EF Direct Outgoing Link" semanticCandidatesExpression="[self.eGet('eReferences')/]" sourceMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Class%20Focus']/@defaultLayer/@containerMappings[name='EF%20Root%20EClass']" targetMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Class%20Focus']/@defaultLayer/@containerMappings[name='EF%20Neighbor%20EClass']" targetFinderExpression="feature:eType" sourceFinderExpression="[diagram.eGet('target')/]" domainClass="ecore.EReference" useDomainElement="true">
          <style sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelExpression="feature:name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="feature:derived">
            <style sizeComputationExpression="1">
              <strokeColor xsi:type="description:UserFixedColor" href="#//@userColorsPalettes[name='Migration%20Palette']/@entries[name='color1']"/>
              <centerLabelStyleDescription labelFormat="italic" labelExpression="['/' + name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="feature:containment">
            <style sourceArrow="FillDiamond" targetArrow="NoDecoration" sizeComputationExpression="1">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelExpression="feature:name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="EF Indirect Outgoing Link" semanticCandidatesExpression="[self.eGet('eAllReferences')/]" sourceMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Class%20Focus']/@defaultLayer/@containerMappings[name='EF%20Root%20EClass']" targetMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Class%20Focus']/@defaultLayer/@containerMappings[name='EF%20Import%20EClass']" targetFinderExpression="feature:eType" sourceFinderExpression="[diagram.eGet('target')/]" domainClass="ecore.EReference" useDomainElement="true">
          <style sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelExpression="feature:name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="feature:derived">
            <style sizeComputationExpression="1">
              <strokeColor xsi:type="description:UserFixedColor" href="#//@userColorsPalettes[name='Migration%20Palette']/@entries[name='color1']"/>
              <centerLabelStyleDescription labelFormat="italic" labelExpression="['/' + name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="feature:containment">
            <style sourceArrow="FillDiamond" targetArrow="NoDecoration" sizeComputationExpression="1">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelExpression="feature:name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="EF Direct Incoming Link" semanticCandidatesExpression="[self.eInverse(EReference)/]" sourceMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Class%20Focus']/@defaultLayer/@containerMappings[name='EF%20Neighbor%20EClass']" targetMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Class%20Focus']/@defaultLayer/@containerMappings[name='EF%20Root%20EClass']" targetFinderExpression="[diagram.eGet('target')/]" sourceFinderExpression="[eContainer()/]" targetExpression="" domainClass="ecore.EReference" useDomainElement="true">
          <style sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelExpression="feature:name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="feature:derived">
            <style sizeComputationExpression="1">
              <strokeColor xsi:type="description:UserFixedColor" href="#//@userColorsPalettes[name='Migration%20Palette']/@entries[name='color1']"/>
              <centerLabelStyleDescription labelFormat="italic" labelExpression="['/' + name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="feature:containment">
            <style sourceArrow="FillDiamond" targetArrow="NoDecoration" sizeComputationExpression="1">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelExpression="feature:name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="EF Indirect Incoming Link" semanticCandidatesExpression="[self.eGet('eAllSuperTypes').eInverse(EReference)/]" sourceMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Class%20Focus']/@defaultLayer/@containerMappings[name='EF%20Import%20EClass']" targetMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Class%20Focus']/@defaultLayer/@containerMappings[name='EF%20Root%20EClass']" targetFinderExpression="[diagram.eGet('target')/]" sourceFinderExpression="[eContainer()/]" targetExpression="" domainClass="ecore.EReference" useDomainElement="true">
          <style sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelExpression="feature:name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="feature:derived">
            <style sizeComputationExpression="1">
              <strokeColor xsi:type="description:UserFixedColor" href="#//@userColorsPalettes[name='Migration%20Palette']/@entries[name='color1']"/>
              <centerLabelStyleDescription labelFormat="italic" labelExpression="['/' + name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="feature:containment">
            <style sourceArrow="FillDiamond" targetArrow="NoDecoration" sizeComputationExpression="1">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelExpression="feature:name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="EF Auto Link" semanticCandidatesExpression="[self.eGet('eReferences')/]" sourceMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Class%20Focus']/@defaultLayer/@containerMappings[name='EF%20Root%20EClass']" targetMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Class%20Focus']/@defaultLayer/@containerMappings[name='EF%20Root%20EClass']" targetFinderExpression="feature:eType" sourceFinderExpression="[eContainer()/]" domainClass="ecore.EReference" useDomainElement="true">
          <style sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelExpression="feature:name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="feature:derived">
            <style sizeComputationExpression="1">
              <strokeColor xsi:type="description:UserFixedColor" href="#//@userColorsPalettes[name='Migration%20Palette']/@entries[name='color1']"/>
              <centerLabelStyleDescription labelFormat="italic" labelExpression="['/' + name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="feature:containment">
            <style sourceArrow="FillDiamond" targetArrow="NoDecoration" sizeComputationExpression="1">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelExpression="feature:name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="EF Root EClass" semanticCandidatesExpression="var:self" domainClass="ecore.EClass" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Inheritance']/@defaultLayer/@containerMappings[name='Inheritance%20Root%20EClass']">
          <subNodeMappings name="EF Root EAttribute" semanticCandidatesExpression="feature:eAllAttributes" domainClass="EAttribute">
            <style xsi:type="style:SquareDescription" labelExpression="[name+' : '+ eType.eGet('name') /]" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="EF Root EOperation" semanticCandidatesExpression="feature:eAllOperations" domainClass="EOperation">
            <style xsi:type="style:SquareDescription" labelExpression="service:getEOperationLabel()" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
        </containerMappings>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="EF Neighbor EClass" preconditionExpression="[self &lt;> diagram.eGet('target')/]" deletionDescription="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Class%20Focus']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Class']" semanticCandidatesExpression="[self.getFocusNeighbourgClassesSemanticCandidate(eInverse(EReference))/]" domainClass="ecore.EClass" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Inheritance']/@defaultLayer/@containerMappings[name='Inheritance%20Neighbor%20EClass']"/>
        <containerMappings name="EF Import EClass" preconditionExpression="[self &lt;> diagram.eGet('target')/]" semanticCandidatesExpression="[focusEFImportEClassSCE(self.eInverse(EReference), self.eGet('eAllSuperTypes').eInverse(EReference)->asOrderedSet())/]" createElements="false" domainClass="ecore.EClass" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" labelExpression="[name  + '\n( '+ eContainer(EPackage).name + ')' /]" roundedCorner="true" widthComputationExpression="10" heightComputationExpression="10" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
          <conditionnalStyles predicateExpression="feature:abstract">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" labelExpression="[name  + '\n( '+ eContainer(EPackage).name + ')' /]" roundedCorner="true" widthComputationExpression="10" heightComputationExpression="10" backgroundStyle="GradientTopToBottom">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <toolSections name="Tools">
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Delete Class">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="&lt;%$elementView%>">
                <subModelOperations xsi:type="tool:DeleteView">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="&lt;%$containerView%>">
                    <subModelOperations xsi:type="tool:For" expression="&lt;%eContents.filter(&quot;DEdge&quot;)[self.targetNode == $elementView || self.sourceNode == $elementView ]%>">
                      <subModelOperations xsi:type="tool:DeleteView"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:SelectionWizardDescription" name="Insert class" precondition="&lt;%$containerView.filter(&quot;DDiagram&quot;).nSize() > 0 %>" forceRefresh="true" candidatesExpression="&lt;%(self.eAllSuperTypes + self.eAllReferences.eType.filter(&quot;EClass&quot;) + self.~eType.filter(&quot;EReference&quot;).eContainer.filter(&quot;EClass&quot;) + self.eAllSuperTypes.~eType.filter(&quot;EReference&quot;).eContainer.filter(&quot;EClass&quot;)).nMinimize - $containerView.eAllContents(&quot;DNodeList&quot;).target.filter(&quot;EClass&quot;)%>" multiple="true" iconPath="/org.eclipse.emf.ecore.edit/icons/full/obj16/EPackage.gif">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:For" expression="&lt;%$element%>">
                <subModelOperations xsi:type="tool_1:CreateView" mapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Class%20Focus']/@defaultLayer/@containerMappings[name='EF%20Import%20EClass']" containerViewExpression="&lt;%$containerView%>"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Extensibility" titleExpression="[name+' - Extensibility'/]" domainClass="ecore.EClass" rootExpression="">
      <defaultLayer name="Default">
        <edgeMappings name="Extensibility Link" semanticCandidatesExpression="[eAllContents()/]" sourceMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Extensibility']/@defaultLayer/@containerMappings[name='Extensibility%20Root%20EClass']" targetMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Extensibility']/@defaultLayer/@containerMappings[name='Extensibility%20Neighbor%20EClass']" targetFinderExpression="service:getExtendedModel()" sourceFinderExpression="[eContainer().eContainer(EClass)/]" domainClass="ecore.EStringToStringMapEntry" useDomainElement="true">
          <style targetArrow="InputFillClosedArrow" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </edgeMappings>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="Extensibility Root EClass" semanticCandidatesExpression="var:self" domainClass="ecore.EClass" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Inheritance']/@defaultLayer/@containerMappings[name='Inheritance%20Root%20EClass']">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" roundedCorner="true" widthComputationExpression="10" heightComputationExpression="10" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="Extensibility Neighbor EClass" preconditionExpression="[self &lt;> diagram.eGet('target')/]" semanticCandidatesExpression="service:getExtendedModel()" domainClass="ecore.EClass" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='EcoreToolsExtra_ClassView']/@ownedRepresentations[name='Inheritance']/@defaultLayer/@containerMappings[name='Inheritance%20Neighbor%20EClass']"/>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="org.polarsys.kitalpha.ecore.diagram.eclass.EClassService"/>
    <ownedJavaExtensions qualifiedClassName="org.polarsys.kitalpha.emde.diagram.services.ExtensibilityService"/>
  </ownedViewpoints>
  <userColorsPalettes name="Migration Palette">
    <entries xsi:type="description:UserFixedColor" red="0" green="100" blue="255" name="DerivedEReferencesColor"/>
  </userColorsPalettes>
</description:Group>
